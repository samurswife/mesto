(()=>{"use strict";var t={profileEditButton:document.querySelector(".profile__edit-button"),editAvatarButton:document.querySelector(".profile__avatar-button"),addPhotoButton:document.querySelector(".profile__add-button"),submitProfileButton:document.querySelector(".popup__form-button_save"),addAvatarButton:document.querySelector(".popup__form-button_save-avatar"),addCardButton:document.querySelector(".popup__form-button_add"),confirmButton:document.querySelector(".popup__form-button_confirm")},e={editForm:document.querySelector(".popup__form_edit"),avatarForm:document.querySelector(".popup__form_edit-avatar"),addForm:document.querySelector(".popup__form_add")},n={formNameInput:document.querySelector(".popup__form-input_name"),formAboutInput:document.querySelector(".popup__form-input_about"),formAvatarInput:document.querySelector(".popup__form-input_avatar")},r=document.querySelector(".elements"),o={inputSelector:".popup__form-input",submitButtonSelector:".popup__form-button",inactiveButtonClass:"popup__form-button_disabled",inputErrorClass:"popup__form-input_type_error",errorClass:"popup__form-input-error_active"};function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var a=function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))},u=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.baseUrl,this._headers=e.headers}var e,n;return e=t,(n=[{key:"loadUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(a).then((function(t){return t})).catch((function(t){console.log(t)}))}},{key:"loadInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(a).then((function(t){return t})).catch((function(t){console.log(t)}))}},{key:"updateUserInfo",value:function(t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})}).then(a).then((function(t){return t})).catch((function(t){console.log(t)}))}},{key:"updateUserAvatar",value:function(t){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t.avatar})}).then(a).catch((function(t){console.log(t)}))}},{key:"uploadNewCard",value:function(t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})}).then(a).then((function(t){return t})).catch((function(t){console.log(t)}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this._url,"/cards/").concat(t._id),{method:"DELETE",headers:this._headers}).then(a).then((function(t){return t})).catch((function(t){console.log(t)}))}},{key:"likeCard",value:function(t){return fetch("".concat(this._url,"/cards/likes/").concat(t._id),{method:"PUT",headers:this._headers}).then(a).then((function(t){return t})).catch((function(t){console.log(t)}))}},{key:"dislikeCard",value:function(t){return fetch("".concat(this._url,"/cards/likes/").concat(t._id),{method:"DELETE",headers:this._headers}).then(a).then((function(t){return t})).catch((function(t){console.log(t)}))}}])&&i(e.prototype,n),t}();function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var l=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=n}var e,n;return e=t,(n=[{key:"renderItems",value:function(t,e){var n=this;t.forEach((function(t){n._renderer(t,e)}))}},{key:"addItem",value:function(t){this._container.append(t)}}])&&c(e.prototype,n),t}();function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var f=function(){function t(e){var n=e.card,r=e.templateSelector,o=e.handleCardClick,i=e.handleDeleteIconClick,a=e.handleLikeClick,u=e.userId;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userId=u,this._name=n.name,this._link=n.link,this._likes=n.likes,this._id=n._id,this._owner=n.owner,this._templateSelector=r,this._handleCardClick=o,this._handleDeleteIconClick=i,this._handleLikeClick=a}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"createCard",value:function(){return this._card=this._getTemplate(),this._cardImage=this._card.querySelector(".element__image"),this._cardTitle=this._card.querySelector(".element__title"),this._cardLikes=this._card.querySelector(".element__like-counter"),this._cardTitle.textContent=this._name,this._cardImage.style.backgroundImage="url(".concat(this._link,")"),this._cardImage.setAttribute("alt",this._name),this._cardLikes.textContent=this._likes.length,this._setEventListeners(),this._card}},{key:"_setEventListeners",value:function(){var t=this;this._card.querySelector(".element__like-button").addEventListener("click",(function(e){return t._handleLikeClick(e,t)})),this._card.querySelector(".element__delete-button").addEventListener("click",(function(e){return t._handleDeleteIconClick(t)})),this._card.querySelector(".element__image").addEventListener("click",(function(e){return t._handleCardClick(e)}))}},{key:"increaseLikes",value:function(t,e){this._cardLikes.textContent=e,t.target.classList.add("element-like-button_active")}},{key:"decreaseLikes",value:function(t,e){this._cardLikes.textContent=e,t.target.classList.remove("element-like-button_active")}},{key:"removeCard",value:function(t){this._card.remove(),this._card=null}}])&&s(e.prototype,n),t}();function p(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var h=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.querySelector(".popup__close-button").addEventListener("click",this.close.bind(this)),this._popup.addEventListener("click",(function(e){e.target===e.currentTarget&&t.close()}))}}])&&p(e.prototype,n),t}();function d(t){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function m(t,e,n){return(m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=b(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function y(t,e){return(y=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function v(t,e){return!e||"object"!==d(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function b(t){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&y(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=b(r);if(o){var n=b(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return v(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._popupImage=e._popup.querySelector(".popup__image"),e._popupImageTitle=e._popup.querySelector(".popup__image-title"),e}return e=a,(n=[{key:"open",value:function(t){m(b(a.prototype),"open",this).call(this),this._popupImageTitle.textContent=t.name,this._popupImage.setAttribute("src",t.link),this._popupImage.setAttribute("alt",t.name)}}])&&_(e.prototype,n),a}(h);function S(t){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function C(t,e,n){return(C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=L(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function E(t,e){return(E=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function w(t,e){return!e||"object"!==S(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function L(t){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var O=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&E(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=L(r);if(o){var n=L(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return w(this,t)});function a(t){var e,n=t.popupSelector,r=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,n))._handleFormSubmit=r,e._popupForm=e._popup.querySelector(".popup__form"),e}return e=a,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._popup.querySelectorAll(".popup__form-input"),this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setEventListeners",value:function(){var t=this;C(L(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())}))}},{key:"close",value:function(){C(L(a.prototype),"close",this).call(this),this._popupForm.reset()}}])&&g(e.prototype,n),a}(h);function I(t){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function j(t,e,n){return(j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function q(t,e){return(q=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function B(t,e){return!e||"object"!==I(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function A(t){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var T=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&q(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=A(r);if(o){var n=A(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return B(this,t)});function a(t){var e,n=t.popupSelector,r=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,n))._handleFormSubmit=r,e._popupForm=e._popup.querySelector(".popup__form"),e}return e=a,(n=[{key:"setHandleFormSubmit",value:function(t){this._handleFormSubmit=t}},{key:"setEventListeners",value:function(){var t=this;j(A(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit()}))}},{key:"close",value:function(){j(A(a.prototype),"close",this).call(this)}}])&&P(e.prototype,n),a}(h);function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var F=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameSelector=e,this._userInfoSelector=n,this._userAvatarSelector=r,this._name=document.querySelector(this._userNameSelector),this._info=document.querySelector(this._userInfoSelector),this._avatar=document.querySelector(this._userAvatarSelector)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){var t={};return t.name=this._name.textContent,t.info=this._info.textContent,t}},{key:"setUserInfo",value:function(t,e){this._name.textContent=t,this._info.textContent=e}},{key:"setUserAvatar",value:function(t){this._avatar.style.backgroundImage='url("'.concat(t,'")')}}])&&R(e.prototype,n),t}();function x(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}const D=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=n,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t,e){var n=this._formSelector.querySelector("#".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),n.textContent=e,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formSelector.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_isValid",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_setEventListeners",value:function(){var t=this;this._inputList=Array.from(this._formSelector.querySelectorAll(this._inputSelector)),this._buttonElement=this._formSelector.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._isValid(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formSelector.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&x(e.prototype,n),t}();function U(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var V=new u({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"0a6bff0b-1736-41fa-9351-11fa93721afd","Content-Type":"application/json"}}),N=function(t,e,n,r){e.textContent="".concat(t?r:n)},H=new F(".profile__name",".profile__about",".profile__avatar"),J=null,G=new l({renderer:W},r),M=new k(".popup_preview");M.setEventListeners();var z=new O({popupSelector:".popup_edit-form",handleFormSubmit:function(e){N(!0,t.submitProfileButton,"Сохранить","Загрузка..."),V.updateUserInfo(e).then((function(t){H.setUserInfo(t.name,t.about)})).then((function(){N(!1,t.submitProfileButton,"Сохранить","Загрузка...")})).finally((function(){z.close()}))}});z.setEventListeners();var $=new O({popupSelector:".popup_edit-avatar-form",handleFormSubmit:function(e){N(!0,t.addAvatarButton,"Сохранить","Загрузка..."),V.updateUserAvatar(e).then((function(t){H.setUserAvatar(t.avatar)})).then((function(){N(!1,t.addAvatarButton,"Сохранить","Загрузка...")})).finally((function(){$.close()}))}});$.setEventListeners();var K=new O({popupSelector:".popup_add-form",handleFormSubmit:function(e){N(!0,t.addCardButton,"Создать","Сохранение..."),V.uploadNewCard(e).then((function(t){return W(t,J)})).then((function(){N(!1,t.addCardButton,"Создать","Сохранение...")})).catch((function(t){console.log(t)})).finally((function(){K.close()}))}});K.setEventListeners();var Q=new T({popupSelector:".popup_confirm",handleFormSubmit:""});function W(e,n){var r=new f({card:e,templateSelector:"#cards",handleCardClick:function(){M.open(e)},handleDeleteIconClick:function(e){Q.setHandleFormSubmit((function(){N(!0,t.confirmButton,"Да","Удаление..."),V.deleteCard(e).then((function(){return N(!1,t.confirmButton,"Да","Удаление")})).then((function(){return r.removeCard()})).finally((function(){Q.close()}))})),Q.open()},handleLikeClick:function(t,e){0===e._likes.length?V.likeCard(e).then((function(n){e._likes=n.likes,r.increaseLikes(t,n.likes.length)})):e._likes.some((function(o){o._id===n?V.dislikeCard(e).then((function(n){e._likes=n.likes,r.decreaseLikes(t,n.likes.length)})):V.likeCard(e).then((function(n){e._likes=n.likes,r.increaseLikes(t,n.likes.length)}))}))},userId:n}),o=r.createCard();n!==e.owner._id&&o.querySelector(".element__delete-button").classList.add("element__delete-button_hidden"),e.likes.forEach((function(t){t._id===n&&o.querySelector(".element__like-button").classList.add("element-like-button_active")})),G.addItem(o)}Q.setEventListeners(),Promise.all([V.loadUserInfo(),V.loadInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}}(e,n)||function(t,e){if(t){if("string"==typeof t)return U(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?U(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];H.setUserInfo(o.name,o.about),H.setUserAvatar(o.avatar),G.renderItems(i,o._id),J=o._id})).catch((function(t){console.log(t)})),t.addPhotoButton.addEventListener("click",(function(){t.addCardButton.classList.add(o.inactiveButtonClass),K.open()})),t.profileEditButton.addEventListener("click",(function(){var t=H.getUserInfo();n.formNameInput.value=t.name,n.formAboutInput.value=t.info,z.open()})),t.editAvatarButton.addEventListener("click",(function(){t.addAvatarButton.classList.add(o.inactiveButtonClass),$.open()})),new D(o,e.editForm).enableValidation(),new D(o,e.avatarForm).enableValidation(),new D(o,e.addForm).enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,